params {
    publish_dir_mode = "copy"
    outdir = "/mnt/workflow/pubdir"
    bwa_docker = "<account>.dkr.ecr.<region>.amazonaws.com/quay/biocontainers/bwa-mem2:<version>"
    picard_docker = "<account>.dkr.ecr.<region>.amazonaws.com/picard:<version>"
    deepvariant_docker = "<account>.dkr.ecr.<region>.amazonaws.com/deepvariant:<version>"
    manta_docker = "<account>.dkr.ecr.<region>.amazonaws.com/manta:<version>"
    expansionhunter_docker = "<account>.dkr.ecr.<region>.amazonaws.com/expansionhunter:<version>"
    expansionhunterdenovo_docker = "<account>.dkr.ecr.<region>.amazonaws.com/expansionhunterdenovo:<version>"
    qualimap_docker = "<account>.dkr.ecr.<region>.amazonaws.com/qualimap:<version>"
    cnvpytor_docker = "<account>.dkr.ecr.<region>.amazonaws.com/cnvpytor:<version>"
    samtools_docker = "<account>.dkr.ecr.<region>.amazonaws.com/samtools:<version>"
    fastp_docker = "<account>.dkr.ecr.<region>.amazonaws.com/fastp:<version>"
    multiqc_docker = "<account>.dkr.ecr.<region>.amazonaws.com/multiqc:<version>"
    automap_docker = "<account>.dkr.ecr.<region>.amazonaws.com/automap:<version>"
    sample_name = null
    fastq_r1 = null
    fastq_r2 = null
    bam_input = null
    bam_index = null
    cram_input = null
    cram_index = null
    input_type = "fastq"  // Options: "fastq", "bam", "cram"
    fasta = null
    fai = null
    fasta_0123 = null
    fasta_amb = null
    fasta_ann = null
    fasta_bwt = null
    fasta_pac = null
    variant_catalog = null
    min_anchor_mapq = null
    max_irr_mapq = null
    genome = null
    ref_qc = null
}

manifest {
    nextflowVersion = '!>=22.04.0'
}

process {
    withLabel: 'bwamem2_mem' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/ALIGNMENT/" },
                pattern: "*.yml"
            ],
        ]
        memory = 192.GB
        cpus = 48
        // Additional memory optimization
        maxForks = 1
        // Use temporary directory for sorting
        scratch = true
        time = '6h'
    }

    withLabel: 'samtools_sort' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/ALIGNMENT/" },
                pattern: "*.yml"
            ],
        ]
        memory = 16.GB
        cpus = 8
        time = '6h'
    }

    withLabel: 'picard_markduplicates' {
        container = params.picard_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/ALIGNMENT/" },
                pattern: "*.yml"
            ],
        ]
        memory = 192.GB
        cpus = 48
        disk = '500 GB'
        time = '6h'
    }

    withLabel: 'picard_collect_multiple_metrics' {
        container = params.picard_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/QC/" },
                pattern: "*"
            ],
        ]
        memory = 192.GB
        cpus = 48
        time = '4h'
    }

    withLabel: 'picard_collect_wgs_metrics' {
        container = params.picard_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/QC/" },
                pattern: "*"
            ],
        ]
        memory = 192.GB
        cpus = 48
        time = '4h'
    }

    withLabel: 'deepvariant_run_deepvariant' {
        container = params.deepvariant_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/SNV/" },
                pattern: "*"
            ],
        ]
        memory = 192.GB
        cpus = 48
        time = '4h'
    }

    withLabel: 'manta_germline' {
        container = params.manta_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/SV/" },
                pattern: "*"
            ],
        ]
        memory = 192.GB
        cpus = 48
        time = '3h'
    }

    withLabel: 'expansionhunter' {
        container = params.expansionhunter_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/REPEATS/" },
                pattern: "*"
            ],
        ]
        memory = 16.GB
        cpus = 8
        time = '2h'
    }

    withLabel: 'samtools_bam2cram' {
        container = params.samtools_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/ALIGNMENT/" },
                pattern: "*"
            ],
        ]
        memory = 16.GB
        cpus = 8
        time = '2h'
    }

    withLabel: 'samtools_index' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/ALIGNMENT/" },
                pattern: "*.yml"
            ],
        ]
        memory = 16.GB
        cpus = 8
        time = '2h'
    }

    withLabel: 'sv_cnvpytor' {
        container = params.cnvpytor_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/SV/" },
                pattern: "*"
            ],
        ]
        memory = 32.GB
        cpus = 16
        time = '3h'
    }

    withLabel: 'expansionhunterdenovo_profile' {
        container = params.expansionhunterdenovo_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/REPEATS/" },
                pattern: "*"
            ],
        ]
        memory = 16.GB
        cpus = 8
        time = '2h'
    }

    withLabel: 'fastp' {
        container = params.fastp_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/QC/" },
                pattern: "*"
            ],
        ]
        memory = 16.GB
        cpus = 8
        time = '3h'
    }

    withLabel: 'multiqc' {
        container = params.multiqc_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/QC/" },
                pattern: "*"
            ],
        ]
        memory = 16.GB
        cpus = 8
        time = '2h'
    }

    withLabel: 'qualimap_bamqc' {
        container = params.qualimap_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/QC/" },
                pattern: "*"
            ],
        ]
        memory = 32.GB
        cpus = 16
        time = '3h'
    }

    withLabel: 'automap' {
        container = params.automap_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/ROH/",
                pattern: "*"
            ],
        ]
        memory = 16.GB
        cpus = 8
        time = '2h'
    }
}