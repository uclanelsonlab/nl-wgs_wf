params {
    publish_dir_mode = "copy"
    outdir = "/mnt/workflow/pubdir"
    bwa_docker = "<account>.dkr.ecr.<region>.amazonaws.com/quay/biocontainers/bwa-mem2:<version>"
    picard_docker = "<account>.dkr.ecr.<region>.amazonaws.com/picard:<version>"
    deepvariant_docker = "<account>.dkr.ecr.<region>.amazonaws.com/deepvariant:<version>"
    manta_docker = "<account>.dkr.ecr.<region>.amazonaws.com/manta:<version>"
    expansionhunter_docker = "<account>.dkr.ecr.<region>.amazonaws.com/expansionhunter:<version>"
    cnvpytor_docker = "<account>.dkr.ecr.<region>.amazonaws.com/cnvpytor:<version>"
    sample_name = null
    fastq_r1 = null
    fastq_r2 = null
    fasta = null
    fai = null
    fasta_0123 = null
    fasta_amb = null
    fasta_ann = null
    fasta_bwt = null
    fasta_pac = null
    variant_catalog = null
}

manifest {
    nextflowVersion = '!>=22.04.0'
}

process {
    withLabel: 'bwamem2_mem' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/hg38/BWA_SAMTOOLS/" },
                pattern: "*"
            ],
        ]
        memory = 32.GB
        cpus = 16
        // Additional memory optimization
        maxForks = 1
        // Use temporary directory for sorting
        scratch = true
    }

    withLabel: 'samtools_sort' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/hg38/ALIGNMENT/" },
                pattern: "*"
            ],
        ]
        memory = 16.GB
        cpus = 8
    }

    withLabel: 'picard_markduplicates' {
        container = params.picard_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/hg38/ALIGNMENT/" },
                pattern: "*"
            ],
        ]
        memory = 32.GB
        cpus = 16
    }

    withLabel: 'deepvariant_run_deepvariant' {
        container = params.deepvariant_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/hg38/SNV/" },
                pattern: "*"
            ],
        ]
        memory = 32.GB
        cpus = 16
    }

    withLabel: 'manta_germline' {
        container = params.manta_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/hg38/SV/" },
                pattern: "*"
            ],
        ]
        memory = 16.GB
        cpus = 8
    }

    withLabel: 'expansionhunter' {
        container = params.expansionhunter_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/hg38/REPEATS/" },
                pattern: "*"
            ],
        ]
        memory = 16.GB
        cpus = 8
    }

    withLabel: 'samtools_bam2cram' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/hg38/ALIGNMENT/" },
                pattern: "*"
            ],
        ]
        memory = 32.GB
        cpus = 16
    }

    withLabel: 'samtools_index' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/hg38/ALIGNMENT/" },
                pattern: "*"
            ],
        ]
        memory = 16.GB
        cpus = 8
    }

    withLabel: 'sv_cnvpytor' {
        container = params.cnvpytor_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: { "${params.outdir}/hg38/SV/" },
                pattern: "*"
            ],
        ]
        memory = 32.GB
        cpus = 16
    }
}