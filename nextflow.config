docker.runOptions = '-u $(id -u):$(id -g)'
docker.enabled = true
process.scratch = true
conda.enabled = true
nextflow.enable.moduleBinaries = true

params {
    publish_dir_mode = "copy"
    outdir = "results"
    bwa_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/bwa-mem2:2.3_samtools-1.22"
    picard_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/picard:latest"
    deepvariant_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/deepvariant:1.9.0"
    manta_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/manta:1.6.0--h9ee0642_2"
    expansionhunter_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/expansionhunter:5.0.0--hf366f20_1"
    expansionhunterdenovo_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/expansionhunterdenovo:0.9.0--hd6d6fdc_9"
    qualimap_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/qualimap:2.3--hdfd78af_0"
    cnvpytor_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/cnvpytor:1.3.1--pyhdfd78af_0"
    fastp_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/fastp:1.0.1--heae3180_0"
    multiqc_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/multiqc:1.30--pyhdfd78af_0"
    automap_docker = "224597534425.dkr.ecr.us-west-2.amazonaws.com/automap:v1.3"
    sample_name = "MGD9221-P_blood_wgs"
    fastq_r1 = "/var/snap/amazon-ssm-agent/11797/download/UDN/3223203.CCTTCTAACA-GATAAGCTCT_S33_merged_R1_001.fastq.gz"
    fastq_r2 = "/var/snap/amazon-ssm-agent/11797/download/UDN/3223203.CCTTCTAACA-GATAAGCTCT_S33_merged_R2_001.fastq.gz"
    fasta = "/var/snap/amazon-ssm-agent/11797/download/ucsc/bwamem2/hg38.fa"
    fai = "/var/snap/amazon-ssm-agent/11797/download/ucsc/hg38.fa.fai"
    fasta_0123 = "/var/snap/amazon-ssm-agent/11797/download/ucsc/bwamem2/hg38.fa.0123"
    fasta_amb = "/var/snap/amazon-ssm-agent/11797/download/ucsc/bwamem2/hg38.fa.amb"
    fasta_ann = "/var/snap/amazon-ssm-agent/11797/download/ucsc/bwamem2/hg38.fa.ann"
    fasta_bwt = "/var/snap/amazon-ssm-agent/11797/download/ucsc/bwamem2/hg38.fa.bwt.2bit.64"
    fasta_pac = "/var/snap/amazon-ssm-agent/11797/download/ucsc/bwamem2/hg38.fa.pac"
    variant_catalog = "/var/snap/amazon-ssm-agent/11797/download/variant_catalog.json"
    min_anchor_mapq = 50
    max_irr_mapq = 40
    genome = "hg38"
}

manifest {
    nextflowVersion = '!>=22.04.0'
}

process {
    withLabel: 'bwamem2_mem' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/ALIGNMENT/",
                pattern: "*.yml"
            ],
        ]
    }

    withLabel: 'samtools_sort' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/ALIGNMENT/",
                pattern: "*.yml"
            ],
        ]
    }

    withLabel: 'picard_markduplicates' {
        container = params.picard_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/ALIGNMENT/",
                pattern: "*.yml"
            ],
        ]
    }

    withLabel: 'picard_collect_multiple_metrics' {
        container = params.picard_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/QC/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'picard_collect_wgs_metrics' {
        container = params.picard_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/QC/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'deepvariant_run_deepvariant' {
        container = params.deepvariant_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/SNV/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'manta_germline' {
        container = params.manta_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/SV/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'expansionhunter' {
        container = params.expansionhunter_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/REPEATS/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'samtools_bam2cram' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/ALIGNMENT/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'samtools_index' {
        container = params.bwa_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/ALIGNMENT/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'sv_cnvpytor' {
        container = params.cnvpytor_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/SV/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'expansionhunterdenovo_profile' {
        container = params.expansionhunterdenovo_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/REPEATS/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'fastp' {
        container = params.fastp_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/QC/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'multiqc' {
        container = params.multiqc_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/QC/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'qualimap_bamqc' {
        container = params.qualimap_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/QC/",
                pattern: "*"
            ],
        ]
    }

    withLabel: 'automap' {
        container = params.automap_docker
        publishDir  = [
            [
                mode: params.publish_dir_mode,
                path: "${params.outdir}/hg38/ROH/",
                pattern: "*"
            ],
        ]
    }
}